"use client";

import { User } from "@/data/users";
import {
  Document,
  Page,
  Text,
  View,
  StyleSheet,
} from "@react-pdf/renderer";
import { format } from "date-fns";

// Create styles for PDF
const styles = StyleSheet.create({
  page: {
    flexDirection: "column",
    backgroundColor: "#ffffff",
    padding: 30,
  },
  header: {
    marginBottom: 20,
    borderBottomWidth: 1,
    borderBottomColor: "#e5e7eb",
    paddingBottom: 10,
  },
  title: {
    fontSize: 24,
    fontWeight: "bold",
    marginBottom: 8,
  },
  subtitle: {
    fontSize: 12,
    color: "#6b7280",
    marginBottom: 4,
  },
  table: {
    display: "flex",
    width: "auto",
    borderWidth: 1,
    borderColor: "#e5e7eb",
    marginBottom: 20,
  },
  tableHeader: {
    flexDirection: "row",
    borderBottomWidth: 1,
    borderBottomColor: "#e5e7eb",
    backgroundColor: "#f9fafb",
    padding: 8,
  },
  tableRow: {
    flexDirection: "row",
    borderBottomWidth: 1,
    borderBottomColor: "#e5e7eb",
    padding: 8,
  },
  tableCell: {
    flex: 1,
    fontSize: 10,
    textAlign: "left",
  },
  badge: {
    padding: "2 6",
    borderRadius: 4,
    fontSize: 10,
    width: "fit-content",
  },
  footer: {
    position: "absolute",
    bottom: 30,
    left: 30,
    right: 30,
    textAlign: "center",
    color: "#6b7280",
    fontSize: 10,
    borderTopWidth: 1,
    borderTopColor: "#e5e7eb",
    paddingTop: 10,
  },
});

interface UsersPDFProps {
  users: User[];
  timestamp: string;
}

export function UsersPDF({ users, timestamp }: UsersPDFProps) {
  return (
    <Document>
      <Page size="A4" style={styles.page}>
        <View style={styles.header}>
          <Text style={styles.title}>Users Report</Text>
          <Text style={styles.subtitle}>Generated on {timestamp}</Text>
          <Text style={styles.subtitle}>Total Users: {users.length}</Text>
        </View>

        <View style={styles.table}>
          <View style={styles.tableHeader}>
            <Text style={styles.tableCell}>Name</Text>
            <Text style={styles.tableCell}>Email</Text>
            <Text style={styles.tableCell}>Role</Text>
            <Text style={styles.tableCell}>Status</Text>
            <Text style={styles.tableCell}>Created</Text>
            <Text style={styles.tableCell}>Last Login</Text>
          </View>

          {users.map((user) => (
            <View key={user.id} style={styles.tableRow}>
              <Text style={styles.tableCell}>
                {user.firstName} {user.lastName}
              </Text>
              <Text style={styles.tableCell}>{user.email}</Text>
              <Text style={styles.tableCell}>{user.role}</Text>
              <Text style={styles.tableCell}>{user.status}</Text>
              <Text style={styles.tableCell}>
                {format(new Date(user.createdAt), "MMM d, yyyy")}
              </Text>
              <Text style={styles.tableCell}>
                {user.lastLogin
                  ? format(new Date(user.lastLogin), "MMM d, yyyy")
                  : "Never"}
              </Text>
            </View>
          ))}
        </View>

        <Text style={styles.footer}>
          Generated by TychiCourse â€¢ {timestamp}
        </Text>
      </Page>
    </Document>
  );
}
